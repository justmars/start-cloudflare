{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cloudflare Base Settings","text":"<p>See main reference</p> <p>         Bases: <code>Enum</code></p> Source code in <code>start_cloudflare/main.py</code> Python<pre><code>class CFSecurityKey(Enum):\nEMAIL = \"X-Auth-Email\"\nAPI = \"X-Auth-Key\"\nUSER_SERVICE = \"X-Auth-User-Service-Key\"\nBEARER = \"Authorization\"\ndef as_header(self, value: str) -&gt; dict[str, str]:\n\"\"\"Helper to create request headers based on the key.\n        Examples:\n            &gt;&gt;&gt; CFSecurityKey.BEARER.as_header('Adria-Ripoli')\n            {'Authorization': 'Bearer Adria-Ripoli'}\n        Args:\n            value (str): Value to include in the header\n        Returns:\n            dict[str, str]: A dictionary that can be combined later to form part of the request URL header\n        \"\"\"  # noqa: E501\nif self.name == \"BEARER\":\nreturn {\"Authorization\": f\"Bearer {value}\"}\nreturn {self.value: value}\n</code></pre> <p>         Bases: <code>BaseSettings</code></p> <p>This is a base class. Bare minimum: <code>CF_ACCT_ID</code> needs to be set.</p> <p>Add secrets to .env file:</p> Field in .env Cloudflare API Credential Where credential found <code>CF_ACCT_ID</code>, defaults to 'ACCT' Signup Account ID Assigned on signup <code>https://dash.cloudflare.com/&lt;ACCT_ID&gt;/</code> Optional: <code>CF_ACCT_EMAIL</code> Account Email What you signed up with Optional: <code>CF_GLOBAL_API_KEY</code> See docs <code>https://dash.cloudflare.com/profile/api-tokens</code> Optional: <code>CF_ORIGIN_CA_KEY</code> See docs <code>https://dash.cloudflare.com/profile/api-tokens</code> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; cf = CF()\n&gt;&gt;&gt; cf\nCF(version=4, email=None)\n&gt;&gt;&gt; cf.account_id\n'ACCT'\n&gt;&gt;&gt; from start_cloudflare import CF\n&gt;&gt;&gt; os.environ['CF_ACCT_ID'] = \"&lt;ACCT_ID&gt; from https://dash.cloudflare.com/&lt;ACCT_ID&gt;/\"\n&gt;&gt;&gt; cf = CF()\n&gt;&gt;&gt; cf\nCF(version=4, email=None)\n&gt;&gt;&gt; cf.account_id\n'&lt;ACCT_ID&gt; from https://dash.cloudflare.com/&lt;ACCT_ID&gt;/'\n&gt;&gt;&gt; CF_API_URL\n'https://api.cloudflare.com'\n</code></pre> Source code in <code>start_cloudflare/main.py</code> Python<pre><code>class CF(BaseSettings):\n\"\"\"\n    This is a base class. Bare minimum: `CF_ACCT_ID` needs to be set.\n    Add secrets to .env file:\n    Field in .env | Cloudflare API Credential | Where credential found\n    :--|:--:|:--\n    `CF_ACCT_ID`, defaults to 'ACCT' | Signup Account ID | Assigned on signup `https://dash.cloudflare.com/&lt;ACCT_ID&gt;/`\n    Optional: `CF_ACCT_EMAIL` | Account Email | What you signed up with\n    Optional: `CF_GLOBAL_API_KEY` | See [docs](https://developers.cloudflare.com/fundamentals/api/get-started/keys/) | `https://dash.cloudflare.com/profile/api-tokens`\n    Optional: `CF_ORIGIN_CA_KEY` | See [docs](https://developers.cloudflare.com/fundamentals/api/get-started/ca-keys/) | `https://dash.cloudflare.com/profile/api-tokens`\n    Examples:\n        &gt;&gt;&gt; import os\n        &gt;&gt;&gt; cf = CF()\n        &gt;&gt;&gt; cf\n        CF(version=4, email=None)\n        &gt;&gt;&gt; cf.account_id\n        'ACCT'\n        &gt;&gt;&gt; from start_cloudflare import CF\n        &gt;&gt;&gt; os.environ['CF_ACCT_ID'] = \"&lt;ACCT_ID&gt; from https://dash.cloudflare.com/&lt;ACCT_ID&gt;/\"\n        &gt;&gt;&gt; cf = CF()\n        &gt;&gt;&gt; cf\n        CF(version=4, email=None)\n        &gt;&gt;&gt; cf.account_id\n        '&lt;ACCT_ID&gt; from https://dash.cloudflare.com/&lt;ACCT_ID&gt;/'\n        &gt;&gt;&gt; CF_API_URL\n        'https://api.cloudflare.com'\n    \"\"\"  # noqa: E501\naccount_id: str | None = Field(\ndefault=\"ACCT\",\nrepr=False,\nenv=\"CF_ACCT_ID\",\n)\nversion: int = Field(\ndefault=4,\nrepr=True,\nenv=\"CF_API_VERSION\",\n)\nemail: EmailStr | None = Field(\ndefault=None,\nrepr=True,\nenv=\"CF_ACCT_EMAIL\",\n)\nglobal_api_key: str | None = Field(\ndefault=None,\nrepr=False,\nenv=\"CF_GLOBAL_API_KEY\",\n)\norigin_ca_key: str | None = Field(\ndefault=None,\nrepr=False,\nenv=\"CF_ORIGIN_CA_KEY\",\n)\nclass Config:\nenv_file = \".env\"\nenv_file_encoding = \"utf-8\"\n@property\ndef head_email(self) -&gt; dict[str, str]:\n\"\"\"Get partial header involving 'X-Auth-Email' key, provided the\n        'CF_ACCT_EMAIL' is set.\n        Examples:\n            &gt;&gt;&gt; cf = CF(email='brightness@long.ago')\n            &gt;&gt;&gt; cf.head_email\n            {'X-Auth-Email': 'brightness@long.ago'}\n        Returns:\n            dict[str, str]: Partial header\n        \"\"\"\nif self.email:\nreturn CFSecurityKey.EMAIL.as_header(self.email)\nraise Exception(\"Need to set email.\")\n@property\ndef head_auth_key(self) -&gt; dict:\n\"\"\"Get partial header involving the 'X-Auth-Email' key, provided the\n        'X-Auth-Key' is set.\n        Examples:\n            &gt;&gt;&gt; cf = CF(global_api_key='mytoken')\n            &gt;&gt;&gt; cf.head_auth_key\n            {'X-Auth-Key': 'mytoken'}\n        Returns:\n            dict[str, str]: Partial header\n        \"\"\"\nif self.global_api_key:\nreturn CFSecurityKey.API.as_header(self.global_api_key)\nraise Exception(\"Need to set global api key.\")\n@classmethod\ndef set_bearer_auth(cls, token: str) -&gt; dict:\n\"\"\"Get partial header involving the 'Authorization' key, provided the\n        'X-Auth-Key' is set.\n        Examples:\n            &gt;&gt;&gt; CF.set_bearer_auth('Guidanio-Cerra')\n            {'Authorization': 'Bearer Guidanio-Cerra'}\n        Returns:\n            dict[str, str]: Partial header\n        \"\"\"\nreturn CFSecurityKey.BEARER.as_header(token)\n@property\ndef base(self) -&gt; str:\n\"\"\"Create the base url for the Cloudflare API with version 4 as default\n        Examples:\n            &gt;&gt;&gt; cf = CF()\n            &gt;&gt;&gt; cf.base\n            'https://api.cloudflare.com/client/v4'\n            &gt;&gt;&gt; cf = CF(version=5)\n            &gt;&gt;&gt; cf.base\n            'https://api.cloudflare.com/client/v5'\n        Returns:\n            str: Partial URL\n        \"\"\"\nreturn f\"{CF_API_URL}/client/v{self.version}\"\ndef add_account_endpoint(self, path: str) -&gt; str:\n\"\"\"Set url endpoint following the API reference /accounts/{path}\n        Examples:\n            &gt;&gt;&gt; cf = CF()\n            &gt;&gt;&gt; cf.add_account_endpoint(\"/test/hello/world\")\n            'https://api.cloudflare.com/client/v4/accounts/test/hello/world'\n        Args:\n            path (str): Needs to start with \"/\"\n        Returns:\n            str: URL involving \"accounts\" to fetch endpoint terminating in `path`\n        \"\"\"\nif not path.startswith(\"/\"):\nraise Exception(\"Path string should start with /\")\nreturn f\"{self.base}/accounts{path}\"\n</code></pre>"},{"location":"#start_cloudflare.main.CFSecurityKey-functions","title":"Functions","text":""},{"location":"#start_cloudflare.main.CFSecurityKey.as_header","title":"<code>as_header(value)</code>","text":"<p>Helper to create request headers based on the key.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; CFSecurityKey.BEARER.as_header('Adria-Ripoli')\n{'Authorization': 'Bearer Adria-Ripoli'}\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>str</code> <p>Value to include in the header</p> required <p>Returns:</p> Type Description <code>dict[str, str]</code> <p>dict[str, str]: A dictionary that can be combined later to form part of the request URL header</p> Source code in <code>start_cloudflare/main.py</code> Python<pre><code>def as_header(self, value: str) -&gt; dict[str, str]:\n\"\"\"Helper to create request headers based on the key.\n    Examples:\n        &gt;&gt;&gt; CFSecurityKey.BEARER.as_header('Adria-Ripoli')\n        {'Authorization': 'Bearer Adria-Ripoli'}\n    Args:\n        value (str): Value to include in the header\n    Returns:\n        dict[str, str]: A dictionary that can be combined later to form part of the request URL header\n    \"\"\"  # noqa: E501\nif self.name == \"BEARER\":\nreturn {\"Authorization\": f\"Bearer {value}\"}\nreturn {self.value: value}\n</code></pre>"},{"location":"#start_cloudflare.main.CF-attributes","title":"Attributes","text":""},{"location":"#start_cloudflare.main.CF.base","title":"<code>base: str</code>  <code>property</code>","text":"<p>Create the base url for the Cloudflare API with version 4 as default</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; cf = CF()\n&gt;&gt;&gt; cf.base\n'https://api.cloudflare.com/client/v4'\n&gt;&gt;&gt; cf = CF(version=5)\n&gt;&gt;&gt; cf.base\n'https://api.cloudflare.com/client/v5'\n</code></pre> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Partial URL</p>"},{"location":"#start_cloudflare.main.CF.head_auth_key","title":"<code>head_auth_key: dict</code>  <code>property</code>","text":"<p>Get partial header involving the 'X-Auth-Email' key, provided the 'X-Auth-Key' is set.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; cf = CF(global_api_key='mytoken')\n&gt;&gt;&gt; cf.head_auth_key\n{'X-Auth-Key': 'mytoken'}\n</code></pre> <p>Returns:</p> Type Description <code>dict</code> <p>dict[str, str]: Partial header</p>"},{"location":"#start_cloudflare.main.CF.head_email","title":"<code>head_email: dict[str, str]</code>  <code>property</code>","text":"<p>Get partial header involving 'X-Auth-Email' key, provided the 'CF_ACCT_EMAIL' is set.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; cf = CF(email='brightness@long.ago')\n&gt;&gt;&gt; cf.head_email\n{'X-Auth-Email': 'brightness@long.ago'}\n</code></pre> <p>Returns:</p> Type Description <code>dict[str, str]</code> <p>dict[str, str]: Partial header</p>"},{"location":"#start_cloudflare.main.CF-functions","title":"Functions","text":""},{"location":"#start_cloudflare.main.CF.add_account_endpoint","title":"<code>add_account_endpoint(path)</code>","text":"<p>Set url endpoint following the API reference /accounts/{path}</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; cf = CF()\n&gt;&gt;&gt; cf.add_account_endpoint(\"/test/hello/world\")\n'https://api.cloudflare.com/client/v4/accounts/test/hello/world'\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>Needs to start with \"/\"</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>URL involving \"accounts\" to fetch endpoint terminating in <code>path</code></p> Source code in <code>start_cloudflare/main.py</code> Python<pre><code>def add_account_endpoint(self, path: str) -&gt; str:\n\"\"\"Set url endpoint following the API reference /accounts/{path}\n    Examples:\n        &gt;&gt;&gt; cf = CF()\n        &gt;&gt;&gt; cf.add_account_endpoint(\"/test/hello/world\")\n        'https://api.cloudflare.com/client/v4/accounts/test/hello/world'\n    Args:\n        path (str): Needs to start with \"/\"\n    Returns:\n        str: URL involving \"accounts\" to fetch endpoint terminating in `path`\n    \"\"\"\nif not path.startswith(\"/\"):\nraise Exception(\"Path string should start with /\")\nreturn f\"{self.base}/accounts{path}\"\n</code></pre>"},{"location":"#start_cloudflare.main.CF.set_bearer_auth","title":"<code>set_bearer_auth(token)</code>  <code>classmethod</code>","text":"<p>Get partial header involving the 'Authorization' key, provided the 'X-Auth-Key' is set.</p> <p>Examples:</p> Python Console Session<pre><code>&gt;&gt;&gt; CF.set_bearer_auth('Guidanio-Cerra')\n{'Authorization': 'Bearer Guidanio-Cerra'}\n</code></pre> <p>Returns:</p> Type Description <code>dict</code> <p>dict[str, str]: Partial header</p> Source code in <code>start_cloudflare/main.py</code> Python<pre><code>@classmethod\ndef set_bearer_auth(cls, token: str) -&gt; dict:\n\"\"\"Get partial header involving the 'Authorization' key, provided the\n    'X-Auth-Key' is set.\n    Examples:\n        &gt;&gt;&gt; CF.set_bearer_auth('Guidanio-Cerra')\n        {'Authorization': 'Bearer Guidanio-Cerra'}\n    Returns:\n        dict[str, str]: Partial header\n    \"\"\"\nreturn CFSecurityKey.BEARER.as_header(token)\n</code></pre>"}]}